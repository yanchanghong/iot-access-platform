<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--定义参数,后面可以通过${app.name}使用-->
    <springProperty scope="context" name="spring.app.name" source="spring.application.name" defaultValue="application"/>
    <property name="app.name" value="${spring.app.name}"/>
    <property name="log.home" value="/logs" />

    <contextName>${app.name}</contextName>

    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--定义输出格式-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{X-B3-TraceId} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 全量日志 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--定义日志输出的路径-->
        <!--这里的scheduler.MANAGER.server.home 没有在上面的配置中设定，所以会使用java启动时配置的值-->
        <!--比如通过 java -Dscheduler.MANAGER.server.home=/path/to XXXX 配置该属性-->
        <file>${log.home}/${app.name}/application.log</file>
        <!--定义日志滚动的策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--定义文件滚动时的文件名的格式-->
            <fileNamePattern>${log.home}/${app.name}/application.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!--定义输出格式-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{X-B3-TraceId} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- info日志 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>  <!-- 如果命中就禁止这条日志 -->
            <onMismatch>ACCEPT</onMismatch>  <!-- 如果没有命中就使用这条规则 -->
        </filter>

        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--定义文件滚动时的文件名的格式-->
            <fileNamePattern>${log.home}/${app.name}/application-info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!--定义输出格式-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{X-B3-TraceId} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- error日志 -->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--定义文件滚动时的文件名的格式-->
            <fileNamePattern>${log.home}/${app.name}/application-error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>500MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <!--定义输出格式-->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{X-B3-TraceId} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 设置默认日志级别为INFO -->
    <root level="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
        <appender-ref ref="file"/>
    </root>

</configuration>